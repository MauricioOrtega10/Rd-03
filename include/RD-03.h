#pragma once

#include <Arduino.h>
#include <HardwareSerial.h>
#include "typedefs.h"

class RD03 
{
    public:
        RD03(HardwareSerial *hsUart);
        RD03(uint8_t rx, uint8_t tx, HardwareSerial *hsUart);
        void begin(uint8_t _min = 1, uint8_t _max = 3, uint8_t _delay = 2);
        void read(); 
        bool getSomeone(); 
        uint8_t getDistance(){return distance;}
        
    private:
        bool with_pins;
        bool start_reading;
        uint8_t distance;
        uint8_t someone;
        serial_buffer_struct serial_data;
        HardwareSerial *HS;
        uint16_t rx_pin;
        uint16_t tx_pin;
        uint8_t max_detection_distance;
        uint8_t min_detection_distance;
        uint8_t disappear_delay;

        //ToDo: To reduce repetitive code, you can create a function that sends multiple data frames.
        byte open_command_mode[14] = {0xFD, 0xFC, 0xFB, 0xFA, 0x04, 0x00, 0xFF, 0x00, 0x01, 0x00, 0x04, 0x03, 0x02, 0x01};
        byte close_command_mode[12] = {0xFD, 0xFC, 0xFB, 0xFA, 0x02, 0x00, 0xFE, 0x00, 0x04, 0x03, 0x02, 0x01};
        byte reporting_mode[18] = {0xFD, 0xFC, 0xFB, 0xFA, 0x08, 0x00, 0x12, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x04, 0x03, 0x02, 0x01};
        byte read_parameter[14] = {0xFD, 0xFC, 0xFB, 0xFA, 0x04, 0x00, 0x08, 0x00, 0x04, 0x00, 0x04, 0x03, 0x02, 0x01};
        byte set_min_distance[18] = {0xFD, 0xFC, 0xFB, 0xFA, 0x08, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x03, 0x02, 0x01};
        byte set_max_distance[18] = {0xFD, 0xFC, 0xFB, 0xFA, 0x08, 0x00, 0x07, 0x00, 0x01, 0x00, 0x03, 0x00, 0x00, 0x00, 0x04, 0x03, 0x02, 0x01}; 
        byte set_delay_time [18] =  {0xFD, 0xFC, 0xFB, 0xFA, 0x08, 0x00, 0x07, 0x00, 0x04, 0x00, 0x02, 0x00, 0x00, 0x00, 0x04, 0x03, 0x02, 0x01}; 
        byte run_mode[18] = {0xFD, 0xFC, 0xFB, 0xFA, 0x08, 0x00, 0x12, 0x00, 0x00, 0x00, 0x64, 0x00, 0x00, 0x00, 0x04, 0x03, 0x02, 0x01};
        uint8_t FRAME_HEADER[4] = {0xF4, 0xF3, 0xF2, 0xF1};
        uint8_t FRAME_END[4] = {0xF8, 0xF7, 0xF6, 0xF5};

};

